plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.kushinae.olapu.api.Main',
                'Implementation-Title': 'Olapu backend api service',
                'Implementation-Version': version
        )
    }
}

dependencies {

    implementation project(path: ':olapu-java-plugin')
    implementation project(path: ':olapu-repository')

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: springComponentVersion
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springComponentVersion
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: springComponentVersion
    // https://mvnrepository.com/artifact/org.mapstruct/mapstruct
    implementation group: 'org.mapstruct', name: 'mapstruct', version: mapstructVersion
    implementation group: 'com.auth0', name: 'java-jwt', version: jwtVersion
    // https://mvnrepository.com/artifact/cn.hutool/hutool-core
    implementation group: 'cn.hutool', name: 'hutool-core', version: hutoolVersion
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: springComponentVersion


    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    // https://mvnrepository.com/artifact/org.mapstruct/mapstruct-processor
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: mapstructVersion

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform()
}